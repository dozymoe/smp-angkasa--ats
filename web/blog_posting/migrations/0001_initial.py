# Generated by Django 4.0.4 on 2022-04-20 08:48
# pylint:disable=line-too-long

import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import rules.contrib.models
import website.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_id', models.CharField(max_length=65, verbose_name='Title')),
                ('title_en', models.CharField(blank=True, max_length=65, verbose_name='Title')),
                ('title_su', models.CharField(blank=True, max_length=65, verbose_name='Title')),
                ('title_jv', models.CharField(blank=True, max_length=65, verbose_name='Title')),
                ('body_id', models.TextField(verbose_name='Body')),
                ('body_en', models.TextField(blank=True, verbose_name='Body')),
                ('body_su', models.TextField(blank=True, verbose_name='Body')),
                ('body_jv', models.TextField(blank=True, verbose_name='Body')),
                ('summary_id', models.TextField(verbose_name='Summary')),
                ('summary_en', models.TextField(blank=True, verbose_name='Summary')),
                ('summary_su', models.TextField(blank=True, verbose_name='Summary')),
                ('summary_jv', models.TextField(blank=True, verbose_name='Summary')),
                ('slug_id', models.SlugField(blank=True, help_text='Human friendly unique url to identify the content, will automatically be filled if left empty.', max_length=64, unique=True, verbose_name='URL Name')),
                ('slug_en', models.SlugField(blank=True, help_text='Human friendly unique url to identify the content, will automatically be filled if left empty.', max_length=64, null=True, unique=True, verbose_name='URL Name')),
                ('slug_su', models.SlugField(blank=True, help_text='Human friendly unique url to identify the content, will automatically be filled if left empty.', max_length=64, null=True, unique=True, verbose_name='URL Name')),
                ('slug_jv', models.SlugField(blank=True, help_text='Human friendly unique url to identify the content, will automatically be filled if left empty.', max_length=64, null=True, unique=True, verbose_name='URL Name')),
                ('image', models.ImageField(blank=True, height_field='image_height', null=True, upload_to='blog_posting/original/', verbose_name='Image', width_field='image_width')),
                ('image_height', models.SmallIntegerField(editable=False, null=True)),
                ('image_width', models.SmallIntegerField(editable=False, null=True)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Publish Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('image_xs', models.ImageField(editable=False, null=True, upload_to='blog_posting/image_xs/')),
                ('image_sm', models.ImageField(editable=False, null=True, upload_to='blog_posting/image_sm/')),
                ('image_md', models.ImageField(editable=False, null=True, upload_to='blog_posting/image_md/')),
                ('image_lg', models.ImageField(editable=False, null=True, upload_to='blog_posting/image_lg/')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_blogpostings', to=settings.AUTH_USER_MODEL)),
                ('published_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='published_blogpostings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-modified_at'],
                'get_latest_by': 'published_at',
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, website.mixins.MultilingualMixin, rules.contrib.models.RulesModelMixin, models.Model),
        ),
    ]
